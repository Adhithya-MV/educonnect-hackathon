
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>EduConnect - Educational Events Platform</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary: #6366f1;
            --primary-dark: #4f46e5;
            --secondary: #8b5cf6;
            --accent: #06b6d4;
            --success: #10b981;
            --warning: #f59e0b;
            --danger: #ef4444;
            --dark: #1f2937;
            --light: #f8fafc;
            --glass: rgba(255, 255, 255, 0.1);
            --glass-border: rgba(255, 255, 255, 0.2);
        }
            

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            overflow-x: hidden;
        }

        /* Animated Background */
        .bg-animation {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -2;
            background: linear-gradient(45deg, #667eea, #764ba2, #f093fb, #f5576c);
            background-size: 400% 400%;
            animation: gradientShift 15s ease infinite;
        }
           


        .bg-particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            opacity: 0.1;
        }

        .particle {
            position: absolute;
            background: white;
            border-radius: 50%;
            animation: float 6s ease-in-out infinite;
        }

        @keyframes gradientShift {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-20px); }
        }

        @keyframes slideIn {
            from { opacity: 0; transform: translateY(30px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        /* Glass morphism components */
        .glass {
            background: var(--glass);
            backdrop-filter: blur(20px);
            border: 1px solid var(--glass-border);
            border-radius: 20px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .glass-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 16px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

        .glass-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }

        /* Navigation */
        .navbar {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            width: 95%;
            max-width: 1200px;
            z-index: 1000;
            animation: slideIn 0.8s ease;
        }

        .nav-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 30px;
        }

        .logo {
            font-size: 1.8rem;
            font-weight: 800;
            color: white;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .logo i {
            background: linear-gradient(45deg, #fff, #f0f9ff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            animation: pulse 2s infinite;
        }

        .nav-links {
            display: flex;
            gap: 30px;
            align-items: center;
        }

        .nav-link {
            color: white;
            text-decoration: none;
            padding: 10px 20px;
            border-radius: 25px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .nav-link::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .nav-link:hover::before {
            left: 100%;
        }

        .nav-link:hover {
            background: rgba(255, 255, 255, 0.1);
            transform: translateY(-2px);
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-weight: 600;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn-primary {
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(99, 102, 241, 0.3);
        }

        /* Main Content */
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .main-content {
            margin-top: 120px;
            animation: slideIn 1s ease;
        }

        /* Hero Section */
        .hero {
            text-align: center;
            padding: 60px 0;
            color: white;
        }

        .hero h1 {
            font-size: 3.5rem;
            font-weight: 800;
            margin-bottom: 20px;
            background: linear-gradient(45deg, #fff, #f0f9ff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            animation: slideIn 1.2s ease;
        }

        .hero p {
            font-size: 1.2rem;
            margin-bottom: 30px;
            opacity: 0.9;
            animation: slideIn 1.4s ease;
        }

        /* Dashboard Tabs */
        .dashboard-tabs {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-bottom: 30px;
            animation: slideIn 1.6s ease;
        }

        .tab-btn {
            padding: 15px 30px;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.1);
            color: white;
            backdrop-filter: blur(10px);
        }

        .tab-btn.active {
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(99, 102, 241, 0.3);
        }

        /* Content Sections */
        .content-section {
            display: none;
            animation: slideIn 0.5s ease;
        }

        .content-section.active {
            display: block;
        }

        /* Events Grid */
        .events-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 30px;
            margin-bottom: 40px;
        }

        .event-card {
            padding: 30px;
            position: relative;
            overflow: hidden;
        }

        .event-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(45deg, var(--primary), var(--secondary));
        }

        .event-header {
            display: flex;
            justify-content: space-between;
            align-items: start;
            margin-bottom: 20px;
        }

        .event-type {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
        }

        .webinar { background: linear-gradient(45deg, #06b6d4, #0891b2); color: white; }
        .seminar { background: linear-gradient(45deg, #10b981, #059669); color: white; }
        .course { background: linear-gradient(45deg, #f59e0b, #d97706); color: white; }

        .event-status {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.7rem;
            font-weight: 600;
        }

        .status-pending { background: #fef3c7; color: #92400e; }
        .status-approved { background: #d1fae5; color: #065f46; }
        .status-expired { background: #fee2e2; color: #991b1b; }

        .event-title {
            font-size: 1.4rem;
            font-weight: 700;
            margin-bottom: 10px;
            color: #1f2937;
        }

        .event-provider {
            color: var(--primary);
            font-weight: 600;
            margin-bottom: 15px;
        }

        .event-details {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
            margin-bottom: 20px;
        }

        .detail-item {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 0.9rem;
            color: #6b7280;
        }

        .detail-item i {
            color: var(--primary);
            width: 16px;
        }

        .event-description {
            color: #6b7280;
            margin-bottom: 20px;
            line-height: 1.6;
        }

        .event-actions {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .btn-sm {
            padding: 8px 16px;
            font-size: 0.85rem;
        }

        .btn-outline {
            background: transparent;
            border: 2px solid var(--primary);
            color: var(--primary);
        }

        .btn-outline:hover {
            background: var(--primary);
            color: white;
        }

        /* Forms */
        .form-section {
            margin-bottom: 40px;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-label {
            margin-bottom: 8px;
            font-weight: 600;
            color: #374151;
        }

        .form-input, .form-select, .form-textarea {
            padding: 12px 16px;
            border: 2px solid #e5e7eb;
            border-radius: 12px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: white;
        }

        .form-input:focus, .form-select:focus, .form-textarea:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
        }

        .form-textarea {
            resize: vertical;
            min-height: 100px;
        }

        /* Statistics Cards */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .stat-card {
            padding: 25px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            opacity: 0.05;
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: 800;
            color: var(--primary);
            margin-bottom: 10px;
        }

        .stat-label {
            color: #6b7280;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.85rem;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .hero h1 {
                font-size: 2.5rem;
            }

            .nav-links {
                display: none;
            }

            .navbar {
                width: 90%;
            }

            .events-grid {
                grid-template-columns: 1fr;
            }

            .form-grid {
                grid-template-columns: 1fr;
            }

            .dashboard-tabs {
                flex-wrap: wrap;
                gap: 5px;
            }

            .tab-btn {
                padding: 10px 15px;
                font-size: 0.9rem;
            }
        }

        /* Loading Animation */
        .loading {
            text-align: center;
            padding: 40px;
            color: white;
        }

        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid rgba(255, 255, 255, 0.3);
            border-top: 4px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Success/Error Messages */
        .message {
            padding: 15px 20px;
            border-radius: 12px;
            margin-bottom: 20px;
            font-weight: 600;
            display: none;
        }

        .message.success {
            background: #d1fae5;
            color: #065f46;
            border-left: 4px solid #10b981;
        }

        .message.error {
            background: #fee2e2;
            color: #991b1b;
            border-left: 4px solid #ef4444;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            z-index: 2000;
            backdrop-filter: blur(5px);
        }

        .modal-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 90%;
            max-width: 500px;
            max-height: 80vh;
            overflow-y: auto;
            padding: 30px;
            border-radius: 20px;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .modal-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: #1f2937;
        }

        .close-modal {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: #6b7280;
            transition: color 0.3s ease;
        }

        .close-modal:hover {
            color: #ef4444;
        }
    </style>
</head>
<body>
<!-- Back button -->
<button id="backBtn" onclick="goBackToTabs()" style="display: none; position: absolute; top: 10px; left: 10px; z-index: 1000;" class="btn btn-secondary">
  ← Back
</button>

    <div class="bg-animation"></div>
    <div class="bg-particles" id="particles"></div>

    <!-- Navigation -->
    <nav class="navbar glass">
        <div class="nav-content">
            <a href="#" class="logo">
                <i class="fas fa-graduation-cap"></i>
                EduConnect
            </a>
            <div class="nav-links" id="navTabs">
 <a href="#" class="nav-link" onclick="goHome()">Home</a>

  <a href="#" class="nav-link" onclick="loadEventsPage()">Events</a>
  <a href="#" onclick="handleTabClick('about')">About</a>
  <a href="#" class="nav-link" onclick="handleTabClick('contact')">Contact</a>
  <a href="#" id="loginBtn" class="btn btn-primary">
    <i class="fas fa-sign-in-alt"></i> Login
  </a>
  <span id="userRoleBadge" style="display: none; color: white; font-weight: 600; margin-left: 10px;"></span>
  <a href="#" id="logoutBtn" class="btn btn-outline" style="display: none;">
    <i class="fas fa-sign-out-alt"></i> Logout
  </a>
</div>
        </div>
    </nav>
    <!-- Contact Section -->

<div id="contact" class="content-section">
    <div class="glass-card">
        <div style="padding: 120px;">
            <h2 style="margin-bottom: 60px; color: #1f2937; font-weight: 1000;">
                <i class="fas fa-envelope" style="color: var(--primary);"></i>
                Contact Us
            </h2>
            <form id="contactForm">
                <div class="form-grid">
                    <div class="form-group">
                        <label class="form-label">Name</label>
                        <input type="text" class="form-input" name="name" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-input" name="email" required>
                    </div>
                </div>
                <div class="form-group">
                    <label class="form-label">Message</label>
                    <textarea class="form-textarea" name="message" required placeholder="Write your message here..."></textarea>
                </div>
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-paper-plane"></i> Send Message
                </button>
            </form>
            <div id="contactMessage" class="message success" style="margin-top: 20px; display: none;"></div>
        </div>
 
  </div>
</div>
<!-- About Section -->

<div id="about" class="content-section">
  <div class="glass-card" style="max-width: 600px; margin: auto; padding: 8rem;">
    <h2 style="text-align: centre; color: #1f2937; font-weight: bold;">About EduConnect</h2>
    <p style="margin-top: 1rem; line-height: 1.6;">
      EduConnect is an all-in-one platform built to streamline the way institutes, academies, and training providers share and manage their educational events. Whether you're a student looking for the next big seminar or a provider announcing a new course, EduConnect brings everything together with ease.
    </p>
    <p style="margin-top: 1rem; line-height: 1.6;">
      Our mission is to connect learners and educators through a centralized system that encourages opportunity, accessibility, and innovation in digital education.
    </p>
    <p style="margin-top: 1rem; font-style: italic; text-align: right;">
      — Team EduConnect
    </p>
  </div>
</div>
   </div>
</div>

    <!-- Main Content -->
    <div class="container">
        <div class="main-content">
<div id="customContent" class="content-section" style="display: none;"></div>

          <div id="loginSection" class="content-section active">
    <div class="glass-card" style="padding: 30px; max-width: 400px; margin: auto;">
      <h2 style="text-align: center; color: #1f2937;">Login</h2>
      <form id="loginForm">
        <div class="form-group">
          <label class="form-label">Email</label>
          <input type="email" class="form-input" id="loginEmail" required>
        </div>
        <div class="form-group">
          <label class="form-label">Password</label>
          <input type="password" class="form-input" id="loginPassword" required>
        </div>
        <div class="form-group">
          <label class="form-label">Role</label>
          <select class="form-select" id="loginRole" required>
            <option value="student">Student</option>
            <option value="provider">Provider</option>
            <option value="admin">Admin</option>
          </select>
        </div>
        <button type="submit" class="btn btn-primary" style="width: 100%;">Login</button>
      </form>
    </div>
  </div>
            <!-- Hero Section -->
            <section class="hero">
                <h1>Connect. Learn. Grow.</h1>
                <p>The ultimate platform for educational events, webinars, and professional development</p>
                
                <!-- Dashboard Tabs -->
                <div class="dashboard-tabs">
                    <button class="tab-btn active" onclick="switchTab('student')">
                        <i class="fas fa-user-graduate"></i>
                        Student View
                    </button>
                    <button class="tab-btn" onclick="switchTab('provider')">
                        <i class="fas fa-chalkboard-teacher"></i>
                        Provider Portal
                    </button>
                    <button class="tab-btn" onclick="switchTab('admin')">
                        <i class="fas fa-cog"></i>
                        Admin Dashboard
                    </button>
                </div>
            </section>

            <!-- Student View -->
            <div id="student" class="content-section active">
                <div class="glass-card">
                    <div style="padding: 30px;">
                        <h2 style="margin-bottom: 30px; color: #1f2937; font-weight: 700;">
                            <i class="fas fa-calendar-alt" style="color: var(--primary);"></i>
                            Upcoming Events
                        </h2>
                        
                        <!-- Search and Filter -->
                        <div class="form-grid" style="margin-bottom: 30px;">
                            <div class="form-group">
                                <input type="text" class="form-input" placeholder="Search events..." id="searchInput">
                            </div>
                            <div class="form-group">
                                <select class="form-select" id="typeFilter">
                                    <option value="">All Types</option>
                                    <option value="webinar">Webinars</option>
                                    <option value="seminar">Seminars</option>
                                    <option value="course">Courses</option>
                                </select>
                            </div>
                        </div>

                        <!-- Events Grid -->
                        <div class="events-grid" id="eventsGrid">
                            <!-- Events will be populated by JavaScript -->
                        </div>
                    </div>
                </div>
            </div>

            <!-- Provider Portal -->
            <div id="provider" class="content-section">
                <div class="glass-card">
                    <div style="padding: 30px;">
                        <h2 style="margin-bottom: 30px; color: #1f2937; font-weight: 700;">
                            <i class="fas fa-plus-circle" style="color: var(--primary);"></i>
                            Post New Event
                        </h2>

                        <div class="message" id="providerMessage"></div>

                        <form id="eventForm">
                            <div class="form-grid">
                                <div class="form-group">
                                    <label class="form-label">Event Title *</label>
                                    <input type="text" class="form-input" name="title" required>
                                </div>
                                <div class="form-group">
                                    <label class="form-label">Event Type *</label>
                                    <select class="form-select" name="type" required>
                                        <option value="">Select Type</option>
                                        <option value="webinar">Webinar</option>
                                        <option value="seminar">Seminar</option>
                                        <option value="course">Course</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label class="form-label">Provider Name *</label>
                                    <input type="text" class="form-input" name="provider" required>
                                </div>
                                <div class="form-group">
                                    <label class="form-label">Contact Email *</label>
                                    <input type="email" class="form-input" name="email" required>
                                </div>
                                <div class="form-group">
                                    <label class="form-label">Event Date *</label>
                                    <input type="datetime-local" class="form-input" name="date" required>
                                </div>
                                <div class="form-group">
                                    <label class="form-label">Duration (hours)</label>
                                    <input type="number" class="form-input" name="duration" min="0.5" step="0.5">
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label class="form-label">Description *</label>
                                <textarea class="form-textarea" name="description" required placeholder="Describe your event..."></textarea>
                            </div>

                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-paper-plane"></i>
                                Submit for Approval
                            </button>
                        </form>

                        <h3 style="margin: 40px 0 20px; color: #1f2937;">My Posted Events</h3>
                        <div class="events-grid" id="providerEvents">
                            <!-- Provider events will be populated here -->
                        </div>
                    </div>
                </div>
            </div>

            <!-- Admin Dashboard -->
            <div id="admin" class="content-section">
                <div class="glass-card">
                    <div style="padding: 30px;">
                        <h2 style="margin-bottom: 30px; color: #1f2937; font-weight: 700;">
                            <i class="fas fa-shield-alt" style="color: var(--primary);"></i>
                            Admin Dashboard
                        </h2>

                        <!-- Statistics -->
                        <div class="stats-grid">
                            <div class="stat-card glass-card">
                                <div class="stat-number" id="totalEvents">0</div>
                                <div class="stat-label">Total Events</div>
                            </div>
                            <div class="stat-card glass-card">
                                <div class="stat-number" id="pendingEvents">0</div>
                                <div class="stat-label">Pending Approval</div>
                            </div>
                            <div class="stat-card glass-card">
                                <div class="stat-number" id="activeEvents">0</div>
                                <div class="stat-label">Active Events</div>
                            </div>
                            <div class="stat-card glass-card">
                                <div class="stat-number" id="expiredEvents">0</div>
                                <div class="stat-label">Expired Events</div>
                            </div>
                        </div>

                        <div class="message" id="adminMessage"></div>

                        <h3 style="margin-bottom: 20px; color: #1f2937;">Pending Approvals</h3>
                        <div class="events-grid" id="pendingEventsGrid">
                            <!-- Pending events will be populated here -->
                        </div>

                        <h3 style="margin: 40px 0 20px; color: #1f2937;">All Events</h3>
                        <div class="events-grid" id="allEventsGrid">
                            <!-- All events will be populated here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Contact Modal -->
    <div class="modal" id="contactModal">
        <div class="modal-content glass-card">
            <div class="modal-header">
                <h3 class="modal-title">Contact Provider</h3>
                <button class="close-modal" onclick="closeModal()">&times;</button>
            </div>
            <div id="contactInfo">
                <!-- Contact information will be populated here -->
            </div>
        </div>
    </div>

    <script>
        // Global variables
        let events = [];
        let currentTab = 'student';
        document.getElementById('logoutBtn').addEventListener('click', function () {
        // Reset UI
        document.getElementById('loginSection').style.display = 'block';
        document.getElementById('logoutBtn').style.display = 'none';
        document.getElementById('loginBtn').style.display = 'inline-block';
        document.getElementById('userRoleBadge').style.display = 'none';

  // Hide all other sections
  document.querySelectorAll('.content-section').forEach(section =>
    section.classList.remove('active')
  );
});
function goHome() {
  // Hide all content sections
  document.querySelectorAll('.content-section').forEach(section => {
    section.classList.remove('active');
    section.style.display = 'none';
  });

  // Show hero and dashboard tabs
  document.querySelector('.hero').style.display = 'block';
  document.querySelector('.dashboard-tabs').style.display = 'flex';

  // Get the user's role from the badge
  const role = document.getElementById('userRoleBadge')?.innerText?.toLowerCase();

  // Show the appropriate dashboard section
  if (role === 'student' || !role) {
    document.getElementById('student').classList.add('active');
    document.getElementById('student').style.display = 'block';
  } else if (role === 'provider') {
    document.getElementById('provider').classList.add('active');
    document.getElementById('provider').style.display = 'block';
  } else if (role === 'admin') {
    document.getElementById('admin').classList.add('active');
    document.getElementById('admin').style.display = 'block';
  }

  // Make sure login section stays hidden
  document.getElementById('loginSection').style.display = 'none';

  // Restore nav bar and hide back button
  document.getElementById('navTabs').style.display = 'flex';
  document.getElementById('backBtn').style.display = 'none';
}


        // Initialize the application
        document.addEventListener('DOMContentLoaded', function() {
            createParticles();
            loadSampleData();
            renderEvents();
            updateStats();
            setupEventListeners();
            startAutoExpireChecker();
        });
        document.getElementById('loginForm').addEventListener('submit', function(e) {
  e.preventDefault();
  
  const email = document.getElementById('loginEmail').value;
  const password = document.getElementById('loginPassword').value;
  const role = document.getElementById('loginRole').value;

  // 🔒 Simple check (you can later replace this with real auth)
  if (email && password) {
    // Hide login
    document.getElementById('loginSection').style.display = 'none';

    // Show selected tab
    switchTab(role);
    document.getElementById('loginBtn').style.display = 'none';
    document.getElementById('userRoleBadge').style.display = 'inline-block';
    document.getElementById('userRoleBadge').innerText = role.toUpperCase();
    document.getElementById('logoutBtn').style.display = 'inline-block';
  } else {
    alert('Invalid credentials');
  }
});

        // Create animated background particles
        function createParticles() {
            const particlesContainer = document.getElementById('particles');
            const particleCount = 50;

            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';
                
                const size = Math.random() * 4 + 1;
                const left = Math.random() * 100;
                const animationDuration = Math.random() * 3 + 3;
                const animationDelay = Math.random() * 2;
                
                particle.style.cssText = `
                    width: ${size}px;
                    height: ${size}px;
                    left: ${left}%;
                    top: ${Math.random() * 100}%;
                    animation-duration: ${animationDuration}s;
                    animation-delay: ${animationDelay}s;
                `;
                
                particlesContainer.appendChild(particle);
            }
        }

        // Load sample data
        function loadSampleData() {
            const sampleEvents = [
                {
                    id: 1,
                    title: "Advanced React Development Masterclass",
                    type: "webinar",
                    provider: "Tech Academy",
                    email: "contact@techacademy.com",
                    date: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 7 days from now
                    duration: 3,
                    description: "Master advanced React concepts including hooks, context, performance optimization, and modern patterns. Perfect for developers looking to level up their React skills.",
                    status: "approved",
                    createdAt: new Date()
                },
                {
                    id: 2,
                    title: "Digital Marketing Strategy Workshop",
                    type: "seminar",
                    provider: "Marketing Pro Institute",
                    email: "info@marketingpro.com",
                    date: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000), // 3 days from now
                    duration: 2,
                    description: "Learn cutting-edge digital marketing strategies, SEO optimization, social media marketing, and conversion rate optimization techniques.",
                    status: "approved",
                    createdAt: new Date()
                },
                {
                    id: 3,
                    title: "Machine Learning Fundamentals",
                    type: "course",
                    provider: "AI Learning Center",
                    email: "admin@ailearning.com",
                    date: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000), // 14 days from now
                    duration: 6,
                    description: "Comprehensive introduction to machine learning concepts, algorithms, and practical applications using Python and popular ML libraries.",
                    status: "pending",
                    createdAt: new Date()
                },
                {
                    id: 4,
                    title: "UX Design Principles",
                    type: "webinar",
                    provider: "Design Studio",
                    email: "hello@designstudio.com",
                    date: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000), // 1 day from now
                    duration: 1.5,
                    description: "Explore fundamental UX design principles, user research methods, and design thinking processes to create better user experiences.",
                    status: "approved",
                    createdAt: new Date()
                },
                {
                    id: 5,
                    title: "Blockchain Technology Overview",
                    type: "seminar",
                    provider: "Crypto Institute",
                    email: "contact@cryptoinst.com",
                    date: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000), // 1 day ago (expired)
                    duration: 2,
                    description: "Understanding blockchain technology, cryptocurrencies, smart contracts, and decentralized applications in today's digital economy.",
                    status: "expired",
                    createdAt: new Date()
                }
            ];

            events = [...sampleEvents];
        }

        // Tab switching functionality
        function switchTab(tab) {
            // Update active tab
            document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');

            // Hide all sections
            document.querySelectorAll('.content-section').forEach(section => section.classList.remove('active'));
            
            // Show selected section
            document.getElementById(tab).classList.add('active');
            currentTab = tab;

            // Render appropriate content
            if (tab === 'student') {
                renderEvents();
            } else if (tab === 'provider') {
                renderProviderEvents();
            } else if (tab === 'admin') {
                renderAdminEvents();
                updateStats();
            } else if (tab === 'contact') {
                // Show contact section only
            }
        }

        // Render events for student view
        function renderEvents() {
            const grid = document.getElementById('eventsGrid');
            const searchTerm = document.getElementById('searchInput')?.value.toLowerCase() || '';
            const typeFilter = document.getElementById('typeFilter')?.value || '';

            let filteredEvents = events.filter(event => 
                event.status === 'approved' && 
                event.date > new Date() &&
                (searchTerm === '' || event.title.toLowerCase().includes(searchTerm) || 
                 event.provider.toLowerCase().includes(searchTerm)) &&
                (typeFilter === '' || event.type === typeFilter)
            );

            grid.innerHTML = filteredEvents.length === 0 ? 
                '<div style="text-align: center; padding: 40px; color: #6b7280;"><i class="fas fa-calendar-times" style="font-size: 3rem; margin-bottom: 20px;"></i><br>No events found matching your criteria.</div>' :
                filteredEvents.map(event => `
                    <div class="event-card glass-card">
                        <div class="event-header">
                            <span class="event-type ${event.type}">${event.type}</span>
                            <span class="event-status status-${event.status}">${event.status}</span>
                        </div>
                        <h3 class="event-title">${event.title}</h3>
                        <div class="event-provider">${event.provider}</div>
                        <div class="event-details">
                            <div class="detail-item">
                                <i class="fas fa-calendar"></i>
                                ${formatDate(event.date)}
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-clock"></i>
                                ${event.duration}h
                            </div>
                        </div>
                        <p class="event-description">${event.description}</p>
                        <div class="event-actions">
                            <button class="btn btn-primary btn-sm" onclick="contactProvider(${event.id})">
                                <i class="fas fa-envelope"></i>
                                Contact Provider
                            </button>
                            <button class="btn btn-outline btn-sm" onclick="shareEvent(${event.id})">
                                <i class="fas fa-share"></i>
                                Share
                            </button>
                        </div>
                    </div>
                `).join('');
        }

        // Render events for provider view
        function renderProviderEvents() {
            const grid = document.getElementById('providerEvents');
            const providerEvents = events.filter(event => true); // In real app, filter by current provider
            
            grid.innerHTML = providerEvents.map(event => `
                <div class="event-card glass-card">
                    <div class="event-header">
                        <span class="event-type ${event.type}">${event.type}</span>
                        <span class="event-status status-${event.status}">${event.status}</span>
                    </div>
                    <h3 class="event-title">${event.title}</h3>
                    <div class="event-provider">${event.provider}</div>
                    <div class="event-details">
                        <div class="detail-item">
                            <i class="fas fa-calendar"></i>
                            ${formatDate(event.date)}
                        </div>
                        <div class="detail-item">
                            <i class="fas fa-clock"></i>
                            ${event.duration}h
                        </div>
                    </div>
                    <p class="event-description">${event.description}</p>
                    <div class="event-actions">
                        ${event.status === 'pending' ? `
                            <button class="btn btn-outline btn-sm" onclick="editEvent(${event.id})">
                                <i class="fas fa-edit"></i>
                                Edit
                            </button>
                        ` : ''}
                        <button class="btn btn-outline btn-sm" onclick="deleteEvent(${event.id})">
                            <i class="fas fa-trash"></i>
                            Delete
                        </button>
                    </div>
                </div>
            `).join('');
        }

        // Render events for admin view
        function renderAdminEvents() {
            const pendingGrid = document.getElementById('pendingEventsGrid');
            const allGrid = document.getElementById('allEventsGrid');

            const pendingEvents = events.filter(event => event.status === 'pending');
            const allEvents = events;

            pendingGrid.innerHTML = pendingEvents.length === 0 ? 
                '<div style="text-align: center; padding: 40px; color: #6b7280;">No pending events for approval.</div>' :
                pendingEvents.map(event => `
                    <div class="event-card glass-card">
                        <div class="event-header">
                            <span class="event-type ${event.type}">${event.type}</span>
                            <span class="event-status status-${event.status}">${event.status}</span>
                        </div>
                        <h3 class="event-title">${event.title}</h3>
                        <div class="event-provider">${event.provider}</div>
                        <div class="event-details">
                            <div class="detail-item">
                                <i class="fas fa-calendar"></i>
                                ${formatDate(event.date)}
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-envelope"></i>
                                ${event.email}
                            </div>
                        </div>
                        <p class="event-description">${event.description}</p>
                        <div class="event-actions">
                            <button class="btn btn-primary btn-sm" onclick="approveEvent(${event.id})">
                                <i class="fas fa-check"></i>
                                Approve
                            </button>
                            <button class="btn btn-outline btn-sm" onclick="rejectEvent(${event.id})">
                                <i class="fas fa-times"></i>
                                Reject
                            </button>
                        </div>
                    </div>
                `).join('');

            allGrid.innerHTML = allEvents.map(event => `
                <div class="event-card glass-card">
                    <div class="event-header">
                        <span class="event-type ${event.type}">${event.type}</span>
                        <span class="event-status status-${event.status}">${event.status}</span>
                    </div>
                    <h3 class="event-title">${event.title}</h3>
                    <div class="event-provider">${event.provider}</div>
                    <div class="event-details">
                        <div class="detail-item">
                            <i class="fas fa-calendar"></i>
                            ${formatDate(event.date)}
                        </div>
                        <div class="detail-item">
                            <i class="fas fa-clock"></i>
                            ${event.duration}h
                        </div>
                    </div>
                    <p class="event-description">${event.description.substring(0, 100)}...</p>
                    <div class="event-actions">
                        <button class="btn btn-outline btn-sm" onclick="viewEventDetails(${event.id})">
                            <i class="fas fa-eye"></i>
                            View Details
                        </button>
                        <button class="btn btn-outline btn-sm" onclick="deleteEvent(${event.id})">
                            <i class="fas fa-trash"></i>
                            Delete
                        </button>
                    </div>
                </div>
            `).join('');
        }

        // Update statistics
        function updateStats() {
            document.getElementById('totalEvents').textContent = events.length;
            document.getElementById('pendingEvents').textContent = events.filter(e => e.status === 'pending').length;
            document.getElementById('activeEvents').textContent = events.filter(e => e.status === 'approved' && e.date > new Date()).length;
            document.getElementById('expiredEvents').textContent = events.filter(e => e.date <= new Date()).length;
        }

        // Format date for display
        function formatDate(date) {
            return new Date(date).toLocaleDateString('en-US', {
                weekday: 'short',
                year: 'numeric',
                month: 'short',
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
        }

        // Event form submission
        function setupEventListeners() {
            // Event form submission
            document.getElementById('eventForm').addEventListener('submit', function(e) {
                e.preventDefault();
                const formData = new FormData(e.target);
                const eventData = Object.fromEntries(formData);
                
                const newEvent = {
                    id: events.length + 1,
                    title: eventData.title,
                    type: eventData.type,
                    provider: eventData.provider,
                    email: eventData.email,
                    date: new Date(eventData.date),
                    duration: parseFloat(eventData.duration) || 1,
                    description: eventData.description,
                    status: 'pending',
                    createdAt: new Date()
                };

                events.push(newEvent);
                showMessage('providerMessage', 'Event submitted successfully! Awaiting admin approval.', 'success');
                e.target.reset();
                renderProviderEvents();
                
                if (currentTab === 'admin') {
                    renderAdminEvents();
                    updateStats();
                }
            });

            // Search and filter functionality
            const searchInput = document.getElementById('searchInput');
            const typeFilter = document.getElementById('typeFilter');
            
            if (searchInput) {
                searchInput.addEventListener('input', renderEvents);
            }
            if (typeFilter) {
                typeFilter.addEventListener('change', renderEvents);
            }
        }

        // Contact provider modal
        function contactProvider(eventId) {
            const event = events.find(e => e.id === eventId);
            if (!event) return;

            const modal = document.getElementById('contactModal');
            const contactInfo = document.getElementById('contactInfo');
            
            contactInfo.innerHTML = `
                <div style="margin-bottom: 20px;">
                    <h4 style="color: #1f2937; margin-bottom: 15px;">${event.title}</h4>
                    <p style="color: #6b7280; margin-bottom: 20px;">${event.provider}</p>
                </div>
                <div style="background: #f8fafc; padding: 20px; border-radius: 12px; margin-bottom: 20px;">
                    <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 15px;">
                        <i class="fas fa-envelope" style="color: var(--primary);"></i>
                        <strong>Email:</strong>
                        <a href="mailto:${event.email}" style="color: var(--primary); text-decoration: none;">${event.email}</a>
                    </div>
                    <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 15px;">
                        <i class="fas fa-calendar" style="color: var(--primary);"></i>
                        <strong>Date:</strong>
                        ${formatDate(event.date)}
                    </div>
                    <div style="display: flex; align-items: center; gap: 10px;">
                        <i class="fas fa-clock" style="color: var(--primary);"></i>
                        <strong>Duration:</strong>
                        ${event.duration} hours
                    </div>
                </div>
                <button class="btn btn-primary" onclick="window.open('mailto:${event.email}?subject=Inquiry about ${encodeURIComponent(event.title)}', '_blank')">
                    <i class="fas fa-paper-plane"></i>
                    Send Email
                </button>
            `;
            
            modal.style.display = 'block';
        }

        // Close modal
        function closeModal() {
            document.getElementById('contactModal').style.display = 'none';
        }

        // Share event
        function shareEvent(eventId) {
            const event = events.find(e => e.id === eventId);
            if (!event) return;

            const shareText = `Check out this ${event.type}: ${event.title} by ${event.provider} on ${formatDate(event.date)}`;
            
            if (navigator.share) {
                navigator.share({
                    title: event.title,
                    text: shareText,
                    url: window.location.href
                });
            } else {
                navigator.clipboard.writeText(shareText).then(() => {
                    alert('Event details copied to clipboard!');
                });
            }
        }

        // Admin functions
        function approveEvent(eventId) {
            const event = events.find(e => e.id === eventId);
            if (event) {
                event.status = 'approved';
                showMessage('adminMessage', 'Event approved successfully!', 'success');
                renderAdminEvents();
                updateStats();
                if (currentTab === 'student') renderEvents();
            }
        }

        function rejectEvent(eventId) {
            if (confirm('Are you sure you want to reject this event?')) {
                events = events.filter(e => e.id !== eventId);
                showMessage('adminMessage', 'Event rejected and removed.', 'success');
                renderAdminEvents();
                updateStats();
            }
        }

        function deleteEvent(eventId) {
            if (confirm('Are you sure you want to delete this event?')) {
                events = events.filter(e => e.id !== eventId);
                showMessage('adminMessage', 'Event deleted successfully.', 'success');
                
                // Re-render current view
                if (currentTab === 'student') renderEvents();
                else if (currentTab === 'provider') renderProviderEvents();
                else if (currentTab === 'admin') {
                    renderAdminEvents();
                    updateStats();
                }
            }
        }

        function editEvent(eventId) {
            const event = events.find(e => e.id === eventId);
            if (!event) return;
            
            // Fill form with event data
            const form = document.getElementById('eventForm');
            form.elements.title.value = event.title;
            form.elements.type.value = event.type;
            form.elements.provider.value = event.provider;
            form.elements.email.value = event.email;
            form.elements.date.value = new Date(event.date).toISOString().slice(0, 16);
            form.elements.duration.value = event.duration;
            form.elements.description.value = event.description;
            
            // Remove the old event
            events = events.filter(e => e.id !== eventId);
            renderProviderEvents();
        }

        function viewEventDetails(eventId) {
            const event = events.find(e => e.id === eventId);
            if (!event) return;
            
            alert(`Event Details:\n\nTitle: ${event.title}\nProvider: ${event.provider}\nType: ${event.type}\nDate: ${formatDate(event.date)}\nDuration: ${event.duration}h\nStatus: ${event.status}\n\nDescription: ${event.description}`);
        }

        // Auto-expire events checker
        function startAutoExpireChecker() {
            setInterval(() => {
                const now = new Date();
                let expired = false;
                
                events.forEach(event => {
                    if (event.date <= now && event.status !== 'expired') {
                        event.status = 'expired';
                        expired = true;
                    }
                });
                
                if (expired) {
                    // Re-render current view
                    if (currentTab === 'student') renderEvents();
                    else if (currentTab === 'provider') renderProviderEvents();
                    else if (currentTab === 'admin') {
                        renderAdminEvents();
                        updateStats();
                    }
                }
            }, 60000); // Check every minute
        }

        // Show message utility
        function showMessage(elementId, message, type) {
            const messageEl = document.getElementById(elementId);
            messageEl.textContent = message;
            messageEl.className = `message ${type}`;
            messageEl.style.display = 'block';
            
            setTimeout(() => {
                messageEl.style.display = 'none';
            }, 5000);
        }

        // Close modal when clicking outside
        window.addEventListener('click', function(e) {
            const modal = document.getElementById('contactModal');
            if (e.target === modal) {
                closeModal();
            }
        });

        // Add smooth scrolling and modern interactions
        document.addEventListener('mousemove', function(e) {
            const cards = document.querySelectorAll('.glass-card');
            cards.forEach(card => {
                const rect = card.getBoundingClientRect();
                const x = e.clientX - rect.left;
                const y = e.clientY - rect.top;
                
                if (x >= 0 && x <= rect.width && y >= 0 && y <= rect.height) {
                    const centerX = rect.width / 2;
                    const centerY = rect.height / 2;
                    const deltaX = (x - centerX) / centerX;
                    const deltaY = (y - centerY) / centerY;
                    
                    card.style.transform = `perspective(1000px) rotateX(${deltaY * 2}deg) rotateY(${deltaX * 2}deg) scale3d(1.02, 1.02, 1.02)`;
                } else {
                    card.style.transform = '';
                }
            });
        });

        // Enhanced search functionality with debouncing
        let searchTimeout;
        function setupAdvancedSearch() {
            const searchInput = document.getElementById('searchInput');
            if (searchInput) {
                searchInput.addEventListener('input', function() {
                    clearTimeout(searchTimeout);
                    searchTimeout = setTimeout(() => {
                        renderEvents();
                    }, 300);
                });
            }
        }

        // Initialize advanced features
        setTimeout(() => {
            setupAdvancedSearch();
     // Handle Contact Form Submission
document.getElementById('contactForm').addEventListener('submit', function(e) {
    e.preventDefault();
    const formData = new FormData(e.target);
    const data = Object.fromEntries(formData);

    // For now, simulate success (you can integrate with email services like EmailJS or backend APIs)
    document.getElementById('contactMessage').style.display = 'block';
    document.getElementById('contactMessage').textContent = `Thanks ${data.name}, your message has been received!`;
    e.target.reset();

    setTimeout(() => {
        document.getElementById('contactMessage').style.display = 'none';
    }, 5000);
});
   }, 1000);
function handleTabClick(tab) {
  switchTab(tab); // Show the selected tab content
  document.getElementById('navTabs').style.display = 'none'; // Hide tab bar
  document.getElementById('backBtn').style.display = 'inline-block'; // Show back button
}

function goBackToTabs() {
  // Show tab bar and hide all content
  document.getElementById('navTabs').style.display = 'flex';
  document.getElementById('backBtn').style.display = 'none';

  // Optionally hide all sections
  document.querySelectorAll('.content-section').forEach(section => {
    section.classList.remove('active');
  });
}
function loadEventsPage() {
  hideAllSections();
  const content = document.getElementById('customContent');
  const template = document.getElementById('eventsTemplate');
  content.innerHTML = template.innerHTML;
  content.style.display = 'block';
}

function loadEventDetails(eventId) {
  hideAllSections();
  const content = document.getElementById('customContent');
  const template = document.getElementById('eventDetailsTemplate');
  content.innerHTML = template.innerHTML;
  content.style.display = 'block';
}

function hideAllSections() {
  document.querySelectorAll('.content-section').forEach(section => {
    section.style.display = 'none';
  });
}

    </script>
<template id="eventsTemplate">
  <div class="glass-card" style="margin: 2rem; padding: 2rem;">
    <h2 style="color: #3b82f6; text-align: center;">Available Events</h2>
    <div class="event-list" style="display: flex; flex-wrap: wrap; justify-content: center; gap: 1.5rem; margin-top: 2rem;">
      <div class="event-card" onclick="loadEventDetails('lpcar2h')" style="background: #1e293b; color: #fff; width: 300px; padding: 1.5rem; border-radius: 1rem; box-shadow: 0 0 15px rgba(0,0,0,0.5); cursor: pointer; transition: transform 0.2s;">
        <h3 style="color: #38bdf8;">LPCAR2H Hackathon</h3>
        <p>Solve real-world car analytics challenges.</p>
        <p><strong>Aug 10–12, 2025</strong></p>
      </div>
    </div>
  </div>
</template>
<template id="eventDetailsTemplate">
  <div class="glass-card" style="margin: 2rem auto; max-width: 900px; padding: 2rem;">
    <h2 style="color: #3b82f6; text-align: center;">Web Development Hackathon</h2>
    <p style="text-align: center; color: #94a3b8;">Tutedude National-Level Online Product-Building Challenge</p>

    <div style="margin-top: 2rem;">
      <h3>About the Event</h3>
      <p>Tutedude Web Development Hackathon is a national-level 48-hour online product-building challenge...</p>
    </div>

    <div style="margin-top: 1.5rem;">
      <h3>Prizes</h3>
      <ul>
        <li><strong>Winner:</strong> ₹8,000 + Certificate + Social Media Feature</li>
        <li><strong>Top 20 Teams:</strong> Excellence Certificate</li>
        <li><strong>All Participants:</strong> Certificate</li>
      </ul>
    </div>

    <div style="text-align: center; margin-top: 2rem;">
      <a href="https://unstop.com/o/lpcar2h?lb=lQzs5bln" class="btn btn-primary" target="_blank">Register on Unstop</a>
    </div>
  </div>
</template>

</body>
</html>